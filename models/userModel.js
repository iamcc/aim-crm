// Generated by CoffeeScript 1.7.1
var ObjectId, Schema, crypto, md5, mongoose, userSchema;

crypto = require('crypto');

mongoose = require('mongoose');

Schema = mongoose.Schema;

ObjectId = Schema.Types.ObjectId;

userSchema = new Schema({
  uname: String,
  pwd: String,
  realname: String,
  role: {
    type: String,
    "enum": 'supporter leader finance admin'.split(' '),
    "default": 'supporter'
  }
});

md5 = function(str) {
  return crypto.createHash('md5').update(str).digest('hex');
};

userSchema.path('pwd').set(function(str) {
  return md5(str);
});

userSchema.methods.exists = function(fn) {
  return this.model('User').count({
    uname: this.uname
  }, function(err, num) {
    return fn(err, !!num);
  });
};

userSchema.statics.login = function(uname, pwd, fn) {
  return this.findOne({
    uname: uname
  }, function(err, doc) {
    if (err) {
      console.log(err);
      return fn(false);
    }
    if (doc && doc.pwd === md5(pwd)) {
      return fn(true, doc);
    } else {
      return fn(false);
    }
  });
};

module.exports = mongoose.model('User', userSchema);

//# sourceMappingURL=userModel.map
