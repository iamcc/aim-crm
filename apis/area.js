// Generated by CoffeeScript 1.7.1
var Area, async, method;

Area = require('../models/areaModel');

async = require('async');

method = {
  GET: function(req, res, next) {
    var condition, num, opts, page, query, _id;
    if ((_id = req.params._id)) {
      if (_id === 'all') {
        return Area.find({
          parent: req.query.parent
        }, null, {
          sort: 'name'
        }, function(err, docs) {
          return res.send(docs);
        });
      } else if (_id === 'allCompanies') {
        return Area.find({
          parent: {
            $ne: null
          }
        }, null, {
          sort: 'name'
        }, function(err, docs) {
          return res.send(docs);
        });
      }
      return Area.findById(_id, function(err, doc) {
        if (err) {
          return next(err);
        }
        return res.send(doc);
      });
    } else {
      condition = {
        parent: (query = req.query).parent
      };
      num = query.num || 10;
      page = query.page || 1;
      opts = {
        skip: (page - 1) * num,
        limit: num,
        sort: '-_id'
      };
      return async.auto({
        count: function(cb) {
          return Area.count(condition, cb);
        },
        list: function(cb) {
          return Area.find(condition, null, opts, cb);
        }
      }, function(err, rst) {
        if (err) {
          return next(err);
        }
        return res.send({
          totalPage: Math.ceil(rst.count / num),
          list: rst.list
        });
      });
    }
  },
  POST: function(req, res, next) {
    var _id, _ref;
    if ((_ref = req.user.role) !== 'leader' && _ref !== 'admin') {
      return res.send(403);
    }
    _id = req.body._id;
    delete req.body._id;
    if (_id) {
      return Area.findByIdAndUpdate(_id, req.body, function(err, doc) {
        if (err) {
          return next(err);
        }
        return res.send(200);
      });
    } else {
      return Area.create(req.body, function(err, doc) {
        if (err) {
          return next(err);
        }
        return res.send(200);
      });
    }
  }
};

module.exports = function(req, res, next) {
  var e;
  try {
    return method[req.method](req, res, next);
  } catch (_error) {
    e = _error;
    console.log(e);
    return res.send(405);
  }
};

//# sourceMappingURL=area.map
