// Generated by CoffeeScript 1.6.3
(function() {
  var Area, Industry, Project, ProjectType, async, method;

  Industry = require('../models/industryModel');

  Project = require('../models/projectModel');

  ProjectType = require('../models/projectTypeModel');

  Area = require('../models/areaModel');

  async = require('async');

  method = {
    GET: function(req, res, next) {
      Industry.find({}, function(err, docs) {
        var i, _fn, _i, _len, _results;
        _fn = function(i) {
          return Project.count({
            'industry.name': i.name
          }, function(err, count) {
            i.projects = count;
            return i.save();
          });
        };
        _results = [];
        for (_i = 0, _len = docs.length; _i < _len; _i++) {
          i = docs[_i];
          _fn(i);
          _results.push(Project.update({
            'industry.name': i.name
          }, {
            'industry._id': i._id
          }, {
            multi: true
          }, function() {}));
        }
        return _results;
      });
      ProjectType.find({}, function(err, docs) {
        var i, _fn, _i, _len, _results;
        _fn = function(i) {
          return Project.count({
            'type.name': i.name
          }, function(err, count) {
            i.projects = count;
            return i.save();
          });
        };
        _results = [];
        for (_i = 0, _len = docs.length; _i < _len; _i++) {
          i = docs[_i];
          _fn(i);
          _results.push(Project.update({
            'type.name': i.name
          }, {
            'type._id': i._id
          }, {
            multi: true
          }, function() {}));
        }
        return _results;
      });
      Area.find({
        parentName: null
      }, function(err, docs) {
        var a, _fn, _i, _len, _results;
        _fn = function(a) {
          return Project.count({
            'area.name': a.name
          }, function(err, count) {
            a.projects = count;
            return a.save();
          });
        };
        _results = [];
        for (_i = 0, _len = docs.length; _i < _len; _i++) {
          a = docs[_i];
          _fn(a);
          Area.update({
            parentName: a.name
          }, {
            parent: a._id
          }, {
            multi: true
          }, function() {});
          _results.push(Project.update({
            'area.name': a.name
          }, {
            'area._id': a._id
          }, {
            multi: true
          }, function() {}));
        }
        return _results;
      });
      Area.find({
        parentName: {
          $ne: null
        }
      }, function(err, docs) {
        var c, _fn, _i, _len, _results;
        _fn = function(c) {
          return Project.count({
            'company.name': c.name
          }, function(err, count) {
            c.projects = count;
            return c.save();
          });
        };
        _results = [];
        for (_i = 0, _len = docs.length; _i < _len; _i++) {
          c = docs[_i];
          _fn(c);
          _results.push(Project.update({
            'company.name': c.name
          }, {
            'company._id': c._id
          }, {
            multi: true
          }, function() {}));
        }
        return _results;
      });
      return res.send(200);
    }
  };

  module.exports = function(req, res, next) {
    var e;
    try {
      return method[req.method](req, res, next);
    } catch (_error) {
      e = _error;
      return res.send(405);
    }
  };

}).call(this);
