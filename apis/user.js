// Generated by CoffeeScript 1.6.3
(function() {
  var User, async, method;

  User = require('../models/userModel');

  async = require('async');

  method = {
    GET: function(req, res, next) {
      var condition, num, opts, page, query, user, _id, _ref;
      user = req.session.user;
      if ((_ref = user.role) !== 'leader' && _ref !== 'admin') {
        return res.send(403);
      }
      switch (user.role) {
        case 'leader':
          if (_id = req.params._id) {
            condition = {
              _id: _id,
              role: 'supporter'
            };
            return User.findOne(condition, function(err, doc) {
              if (err) {
                console.log(err);
                return res.send(500);
              }
              return res.send(doc);
            });
          } else {
            condition = (query = req.query).condition;
            num = query.num || 10;
            page = query.page || 1;
            opts = {
              skip: (page - 1) * num,
              limit: num
            };
            return async.auto({
              count: function(cb) {
                return User.count(condition, cb);
              },
              list: function(cb) {
                return User.find(condition, null, opts, cb);
              }
            }, function(err, rst) {
              if (err) {
                console.log(err);
                return res.send(500);
              }
              return res.send({
                totalPage: Math.ceil(rst.count / num),
                list: rst.list
              });
            });
          }
          break;
        case 'admin':
          break;
        default:
          return res.send(403);
      }
    },
    PUT: function(req, res, next) {},
    POST: function(req, res, next) {},
    DELETE: function(req, res, next) {}
  };

  module.exports = function(req, res, next) {
    var e;
    try {
      return method[req.method](req, res, next);
    } catch (_error) {
      e = _error;
      return res.send(405);
    }
  };

}).call(this);
