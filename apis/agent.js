// Generated by CoffeeScript 1.7.1
var Agent, Product, async, method;

Agent = require('../models/agentModel');

Product = require('../models/productModel');

async = require('async');

method = {
  GET: function(req, res, next) {
    var num, opts, page, query, _id;
    if ((_id = req.params._id)) {
      if (_id === 'all') {
        return Agent.find({}, function(err, docs) {
          return res.send(docs);
        });
      }
      return Agent.findById(_id, function(err, doc) {
        if (err) {
          return next(err);
        }
        return res.send(doc);
      });
    } else {
      page = (query = req.query).page || 1;
      num = query.num || 10;
      opts = {
        skip: (page - 1) * num,
        limit: num,
        sort: '-_id'
      };
      return async.auto({
        count: function(cb) {
          return Agent.count({}, cb);
        },
        data: function(cb) {
          return Agent.find({}, null, opts, cb);
        }
      }, function(err, rst) {
        if (err) {
          return next(err);
        }
        return res.send({
          totalPage: Math.ceil(rst.count / num),
          list: rst.data
        });
      });
    }
  },
  POST: function(req, res, next) {
    var _id, _ref;
    if ((_ref = req.user.role) !== 'leader' && _ref !== 'admin') {
      return res.send(403);
    }
    delete req.body._id;
    if ((_id = req.params._id)) {
      return Agent.count({
        name: req.body.name
      }, function(err, count) {
        if (err) {
          return next(err);
        }
        if (count > 1) {
          return res.send(500, '代理商已经存在');
        }
        return Agent.findByIdAndUpdate(_id, req.body, function(err2) {
          if (err2) {
            return next(err2);
          }
          return res.send(200);
        });
      });
    } else {
      return async.auto({
        count: function(cb) {
          return Agent.count({
            name: req.body.name
          }, cb);
        },
        products: function(cb) {
          return Product.find({}, cb);
        },
        save: [
          'count', 'products', function(cb, rst) {
            var product, _i, _len, _ref1;
            if (rst.count > 0) {
              return res.send(500, '代理商已经存在');
            }
            _ref1 = rst.products;
            for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
              product = _ref1[_i];
              product.price *= 0.3;
            }
            req.body.products = rst.products;
            return Agent.create(req.body, cb);
          }
        ]
      }, function(err, rst) {
        if (err) {
          return next(err);
        }
        return res.send(200);
      });
    }
  }
};

module.exports = function(req, res, next) {
  var e;
  try {
    return method[req.method](req, res, next);
  } catch (_error) {
    e = _error;
    console.log(e);
    return res.send(405);
  }
};

//# sourceMappingURL=agent.map
