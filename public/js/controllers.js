// Generated by CoffeeScript 1.6.3
(function() {
  var controller;

  controller = angular.module('app.controllers', []).controller;

  controller('userCtrl', [
    '$scope', '$timeout', function($scope, $timeout) {
      $scope.showCount = function(item) {
        $scope.isShowFilter = false;
        if (item === $scope.curCountItem) {
          $scope.isShowCount = false;
          return $scope.curCountItem = null;
        } else {
          $scope.isShowCount = true;
          return $scope.curCountItem = item;
        }
      };
      $scope.showFilter = function() {
        $scope.isShowCount = false;
        $scope.curCountItem = null;
        return $scope.isShowFilter = !$scope.isShowFilter;
      };
      $scope.prePages = function() {
        var data, _i, _ref, _ref1, _results;
        data = $scope.projectData;
        if (data.minPage > 1) {
          data.minPage -= data.pageNum;
          data.maxPage = data.minPage + data.pageNum - 1;
          return data.pageArr = (function() {
            _results = [];
            for (var _i = _ref = data.minPage, _ref1 = data.maxPage; _ref <= _ref1 ? _i <= _ref1 : _i >= _ref1; _ref <= _ref1 ? _i++ : _i--){ _results.push(_i); }
            return _results;
          }).apply(this);
        }
      };
      $scope.nextPages = function() {
        var data, _i, _ref, _ref1, _results;
        data = $scope.projectData;
        if (data.maxPage < data.totalPage) {
          data.minPage += data.pageNum;
          data.maxPage = data.minPage + data.pageNum - 1;
          if (data.maxPage > data.totalPage) {
            data.maxPage = data.totalPage;
          }
          return data.pageArr = (function() {
            _results = [];
            for (var _i = _ref = data.minPage, _ref1 = data.maxPage; _ref <= _ref1 ? _i <= _ref1 : _i >= _ref1; _ref <= _ref1 ? _i++ : _i--){ _results.push(_i); }
            return _results;
          }).apply(this);
        }
      };
      $scope.goPage = function(page) {
        return $scope.projectData.curPage = page;
      };
      $scope.showEdit = function(event, project) {
        if ($(event.target).parent().hasClass('edit')) {
          return;
        }
        $scope.oldProject = angular.copy(project);
        $(event.target).find('.view').hide();
        $(event.target).find('.edit').show();
        $(event.target).find('.edit').children().first().focus();
      };
      $scope.save = function(event, project, field) {
        var param;
        $(event.target).parent().parent().find('.view').show();
        $(event.target).parent().parent().find('.edit').hide();
        param = {};
        param[field] = project[field];
        if ($scope.oldProject[field] !== project[field]) {
          return console.log('save', param);
        }
      };
      return $timeout(function() {
        var data, _i, _ref, _ref1, _results;
        data = $scope.projectData = {};
        data.minPage = 1;
        data.pageNum = 5;
        data.maxPage = data.minPage + data.pageNum - 1;
        data.curPage = 1;
        data.totalPage = 11;
        data.pageArr = (function() {
          _results = [];
          for (var _i = _ref = data.minPage, _ref1 = data.maxPage; _ref <= _ref1 ? _i <= _ref1 : _i >= _ref1; _ref <= _ref1 ? _i++ : _i--){ _results.push(_i); }
          return _results;
        }).apply(this);
        return data.list = [
          {
            projectName: '1',
            projectType: '1',
            companyName: '1',
            salesName: '1',
            industry: '1',
            curStatus: '1',
            supporterName: '1',
            tags: '1',
            agent: '1',
            price: '1',
            areaName: '1',
            managerName: '1',
            buyYear: '1',
            client: '1',
            orderDate: '1',
            maeAccount: '1',
            maePwd: '1',
            maeCreatorName: '1',
            wxAccount: '1',
            wxPwd: '1',
            wxType: '1',
            ecId: '1',
            sendEcBoxDate: '1',
            onlineDate: '1',
            onlineReviewer: '1',
            memo: '1'
          }
        ];
      }, 1000);
    }
  ]);

  controller('loginCtrl', [
    '$scope', '$http', '$rootScope', '$location', 'User', function($scope, $http, $rootScope, $location, User) {
      return $scope.login = function(e, form) {
        var $btn;
        if (form.$invalid) {
          return;
        }
        $scope.isError = false;
        $btn = $(e.target);
        $btn.button('loading');
        return User.login({
          uname: $scope.uname,
          pwd: $scope.pwd
        }, function(data) {
          $rootScope.userinfo = data;
          return $location.path('/');
        }, function(err) {
          $btn.button('reset');
          return $scope.isError = true;
        });
      };
    }
  ]);

  controller('settingCtrl', [
    '$scope', 'User', function($scope, User) {
      var $tabs, $userinfo;
      $tabs = $scope.tabs = [];
      $userinfo = $scope.userinfo;
      $tabs[0] = {
        save: function(e, form) {
          var $btn, self;
          if (form.$invalid) {
            return;
          }
          if (this.pwd !== this.pwd2) {
            return this.error = '两次密码不一样';
          }
          this.error = '';
          self = this;
          $btn = $(e.target);
          $btn.button('loading');
          return User.setPwd({
            _id: $userinfo._id,
            pwd: this.pwd
          }, function(data) {
            self.success = '修改成功';
            return $btn.button('reset');
          }, function(err) {
            self.error = '修改失败';
            $btn.button('reset');
            return console.log(err);
          });
        }
      };
      return $scope.selectMenu = function(id) {
        $scope.selectedMenu = id;
        switch (id) {
          case 0:
            return console.log;
          case 1:
            return console.log;
          case 2:
            return console.log;
          case 3:
            return console.log;
          case 4:
            return console.log;
          case 5:
            return console.log;
          case 6:
            return console.log;
        }
      };
    }
  ]);

}).call(this);
